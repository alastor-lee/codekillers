/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kitchen.gui;

import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Colin
 */
public class EditInventoryFrame extends javax.swing.JFrame {

    /**
     * Creates new form EditInventoryFrame
     */
    public EditInventoryFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        CloseButton = new javax.swing.JButton();
        SearchField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        AddItemButton = new javax.swing.JButton();
        EditItemButton = new javax.swing.JButton();
        DeleteItemButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTable = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;//you can set which column/row can be edited.
            }
        };

        setResizable(false);

        CloseButton.setText("Close");
        CloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseButtonActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        AddItemButton.setText("Add Item");
        AddItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemButtonActionPerformed(evt);
            }
        });

        EditItemButton.setText("Edit Item");
        EditItemButton.setEnabled(false);
        EditItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditItemButtonActionPerformed(evt);
            }
        });

        DeleteItemButton.setText("Delete Item");
        DeleteItemButton.setEnabled(false);
        DeleteItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemButtonActionPerformed(evt);
            }
        });

        outputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        outputTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                outputTableFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(outputTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(CloseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(AddItemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditItemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteItemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddItemButton)
                    .addComponent(EditItemButton)
                    .addComponent(DeleteItemButton)
                    .addComponent(SearchButton)
                    .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CloseButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 564, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemButtonActionPerformed
        AddItemFrame AddItemFrame = new AddItemFrame(); //create the frame
        AddItemFrame.setLocationRelativeTo(null); //center the frame
        AddItemFrame.getRootPane().setDefaultButton(AddItemFrame.AddItemButton);
        AddItemFrame.setVisible(true); //make it visible
    }//GEN-LAST:event_AddItemButtonActionPerformed

    private void EditItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditItemButtonActionPerformed
        System.out.println(outputTable.getValueAt(outputTable.getSelectedRow(),0));
        
        EditItemFrame EditItemFrame = new EditItemFrame(); //create the frame
        EditItemFrame.setLocationRelativeTo(null); //center the frame
        EditItemFrame.getRootPane().setDefaultButton(EditItemFrame.EditItemButton);
        EditItemFrame.ItemNameField.setText(outputTable.getValueAt(outputTable.getSelectedRow(),0).toString());
        EditItemFrame.ItemQuantityField.setText(outputTable.getValueAt(outputTable.getSelectedRow(),1).toString());
        EditItemFrame.ItemPriceField.setText(outputTable.getValueAt(outputTable.getSelectedRow(),2).toString());
        EditItemFrame.setVisible(true); //make it visible
    }//GEN-LAST:event_EditItemButtonActionPerformed

    private void DeleteItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemButtonActionPerformed
        String toBeDeletedName = outputTable.getValueAt(outputTable.getSelectedRow(), 0).toString(); //get name of selected item
        String toBeDeletedQuantity = outputTable.getValueAt(outputTable.getSelectedRow(), 1).toString(); //get quantity
        String toBeDeletedPrice = outputTable.getValueAt(outputTable.getSelectedRow(), 2).toString(); //get price

        database.info.InventoryInfo DeleteItem = new database.info.InventoryInfo();
        engine.InventoryDBManager InventoryDelete = new engine.InventoryDBManager();
        DeleteItem.setItemName(outputTable.getValueAt(outputTable.getSelectedRow(), 0).toString());
        DeleteItem.setItemQuantity(outputTable.getValueAt(outputTable.getSelectedRow(), 1).toString());
        DeleteItem.setItemPrice(outputTable.getValueAt(outputTable.getSelectedRow(), 2).toString());
        InventoryDelete.DBremoveRecord(toBeDeletedName+";"+toBeDeletedQuantity+";"+toBeDeletedPrice);
        performSearch();
    }//GEN-LAST:event_DeleteItemButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        if (SearchField.getText().equals("")) {
            //display all items
            String query = "";
            database.info.InventoryInfo InventorySearch = new database.info.InventoryInfo();

            try {
                InventorySearch.setItemName(query);
            } catch (NullPointerException e) {
                System.out.println("Error: Item not found in itemDatabaseFile.txt.");
            }
            System.out.println("query: " + query);
            System.out.println("TESTING VARS SET IN InventoryInfo ItemName: " + InventorySearch.getItemName());

            engine.InventoryDBManager manager = new engine.InventoryDBManager();
            try {
                ArrayList<String> output = manager.printAllRecords(InventorySearch);
                System.out.println("output: " + output);

                String listString = "";
                for (String s : output) {
                    listString += s + "\t";
                }
                System.out.println("liststring: " + listString);
                String[] split = listString.split(Pattern.quote("\t")); //split into pieces
                System.out.println("split[0]: " + split[0]);
                System.out.println("split[1]: " + split[1]);

                DefaultTableModel model = (DefaultTableModel) outputTable.getModel();
                model.setRowCount(0);

                for (int i = 0; i <= split.length; i++) {
                    String[] newSplit = split[i].split(Pattern.quote(";"));
                    model.addRow(newSplit);
                }
            } catch (ArrayIndexOutOfBoundsException e) {
                //ViewInventoryOutput.setText("No matching item found in inventory.");
            }
        } else {
            //display one item
            String query = SearchField.getText();
            database.info.InventoryInfo InventorySearch = new database.info.InventoryInfo();

            DefaultTableModel model = (DefaultTableModel) outputTable.getModel();
            model.setRowCount(0);

            try {
                InventorySearch.setItemName(query);
            } catch (NullPointerException e) {
                System.out.println("Error: Item not found in itemDatabaseFile.txt.");
            }
            System.out.println("query: " + query);
            System.out.println("TESTING VARS SET IN InventoryInfo ItemName: " + InventorySearch.getItemName());

            engine.InventoryDBManager manager = new engine.InventoryDBManager();
            try {
                String nonSplit = manager.searchDB(InventorySearch); //return fields

                String[] split = nonSplit.split(Pattern.quote(";")); //split into pieces
                System.out.println("Results: " + nonSplit);

                try {
                    model.addRow(split);
                } catch (ArrayIndexOutOfBoundsException e) {
                    model.setRowCount(0);
                    String[] errorArray = {"Error: No items found", "", ""};
                    model.addRow(errorArray);
                }
            } catch (IndexOutOfBoundsException e) {
                model.setRowCount(0);
                String[] errorArray = {"Error: No items found", "", ""};
                model.addRow(errorArray);
            }
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void CloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseButtonActionPerformed
        this.dispose(); //Close the frame
    }//GEN-LAST:event_CloseButtonActionPerformed

    private void outputTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_outputTableFocusGained
        EditItemButton.setEnabled(true);
        DeleteItemButton.setEnabled(true);
    }//GEN-LAST:event_outputTableFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditInventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditInventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditInventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditInventoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditInventoryFrame().setVisible(true);
            }
        });
    }
    
    public static void performSearch(){
        SearchButton.doClick();
    }
    
    public static void deleteItem(){
        DeleteItemButton.doClick();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItemButton;
    private javax.swing.JButton CloseButton;
    private static javax.swing.JButton DeleteItemButton;
    private javax.swing.JButton EditItemButton;
    public static javax.swing.JButton SearchButton;
    public static javax.swing.JTextField SearchField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable outputTable;
    // End of variables declaration//GEN-END:variables
}
